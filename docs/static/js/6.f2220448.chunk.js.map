{"version":3,"sources":["site/pages/sheet/index.js","views/Transition.tsx","views/Sheet.tsx"],"names":["TestContent","Array","fill","map","val","idx","key","TestSheet","style","margin","titleTxt","canModalClose","button","Transition","name","isShow","children","time","initName","useState","transitionName","setName","isConShow","setConShow","useEffect","setTimeout","React","Children","child","childTs","cloneElement","className","props","Sheet","setIsShow","closeSheet","onClick","header","e","stopPropagation","ensureHandler"],"mappings":"uGAAA,2CAKA,SAASA,IACL,OAAOC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAAN,OAAc,yBAAKC,IAAKD,GAAV,4BAAqBA,MAcrDE,UAXf,WACI,OAAO,yBAAKC,MAAO,CAACC,OAAQ,cACxB,kBAAC,IAAD,CACIC,SAAS,0BACTC,eAAa,EACbC,OAAQ,kBAAC,IAAD,uCACR,kBAACZ,EAAD,U,4DCNG,SAASa,EAAT,GAA4E,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,SAAwC,IAA9BC,YAA8B,MAAvB,IAAuB,EAEhFC,EAAWJ,GAAQ,GAF6D,EAIpDK,mBAAS,IAJ2C,mBAI/EC,EAJ+E,KAI/DC,EAJ+D,OAKtDF,oBAAS,GAL6C,mBAK/EG,EAL+E,KAKpEC,EALoE,KA+BtF,OAxBAC,qBAAU,WAON,OANIT,IACAQ,GAAW,GACXE,YAAW,WACPJ,EAAQ,GAAD,OAAIH,EAAJ,WACR,KAEA,YAEEI,GAAaP,IACdM,EAAQ,GAAD,OAAIH,EAAJ,UAEPO,YAAW,WACPF,GAAW,GACXF,EAAQ,MACTJ,OAOZ,CAACF,IAEG,oCAECO,EACII,IAAMC,SAASxB,IAAIa,GAAU,SAACY,GAC1B,IAAMC,EAAUD,EAChB,OAAOF,IAAMI,aAAaD,EACtB,CACIE,UAAU,GAAD,OAAMF,EAAQG,MAAMD,UAApB,YAAiCX,QAKpD,MCxCF,SAASa,EAAMD,GAAoB,IAAD,EAClBb,oBAAS,GADS,mBACvCJ,EADuC,KAC/BmB,EAD+B,KAOxCC,EAAa,WACfD,GAAU,IAad,OAAO,oCACH,yBAAKE,QAAS,kBAAMF,GAAU,KAAQF,EAAMpB,QAC5C,kBAACC,EAAD,CAAYC,KAAK,YAAYC,OAAQA,GACjC,yBAAKgB,UAAU,iBACX,yBAAKA,UAAU,iBAAiBK,QAtBvB,WACjBF,GAAU,MAuBF,yBAAKH,UAAU,kBAGPC,EAAMK,OACFL,EAAMK,OACN,yBAAKN,UAAU,oBACX,yBAAKK,QAASD,GAAd,gBACA,6BAAMH,EAAMtB,UAAY,IACxB,yBAAK0B,QAxBZ,SAACE,GAElBA,EAAEC,kBACiC,oBAAxBP,EAAMQ,eACbR,EAAMQ,gBAEVL,MAkBwB,iBAIZ,yBACIJ,UAAU,kBACZC,EAAMhB,c","file":"static/js/6.f2220448.chunk.js","sourcesContent":["import React from 'react';\n\nimport Sheet from '../../../views/Sheet';\nimport Button from '../../../views/Button';\n\nfunction TestContent() {\n    return Array(22).fill(0).map((val, idx) => <div key={idx}>内容部分 {idx}</div>)\n}\n\nfunction TestSheet() {\n    return <div style={{margin: '33px 16px'}}>\n        <Sheet\n            titleTxt='sheet的标题'\n            canModalClose\n            button={<Button>点击弹出Sheet</Button>}>\n            <TestContent></TestContent>\n        </Sheet>\n    </div>\n}\n\nexport default TestSheet;","import React, {useState, useEffect} from 'react';\n\ninterface TransitionProps {\n    name: string,\n    isShow: boolean,\n    children: React.ReactNode,\n    time?: number\n}\n\nexport default function Transition({name, isShow, children, time = 300}: TransitionProps) {\n\n    const initName = name || '';\n\n    const [transitionName, setName] = useState('');\n    const [isConShow, setConShow] = useState(false);\n\n    useEffect(() => {\n        if (isShow) {\n            setConShow(true);\n            setTimeout(() => {\n                setName(`${initName}--in`);\n            }, 34); // 下两帧\n        }\n        return () => {\n            // 当销毁时 设置 class 为 out\n            if (!isConShow && isShow) {\n                setName(`${initName}--out`);\n                // 正常关闭\n                setTimeout(() => {\n                    setConShow(false);\n                    setName('');\n                }, time);\n                // TODO\n                // 也可以通过 transitionEnd 来计算结束时间\n                // 但是如果没有设置动画效果那么怎么办？\n                // 如何判断是否有动画效果？\n            }\n        }\n    }, [isShow])\n\n    return <>\n        {\n            isConShow ?\n                React.Children.map(children, (child) => {\n                    const childTs = child as React.DetailedReactHTMLElement<any, HTMLElement>;\n                    return React.cloneElement(childTs,\n                        {\n                            className:  `${childTs.props.className} ${transitionName}`,\n                        },\n                        // children // 外包裹\n                    )\n                })\n                : null\n        }\n    </>\n}\n","import React, { useState, ReactNode, MouseEvent } from 'react';\nimport Transition from './Transition';\n\ninterface SheetProps {\n    children: ReactNode,\n    button: ReactNode, // 触发Sheet的按钮\n    header?: ReactNode,\n    titleTxt?: string,\n    canModalClose?: boolean,\n    ensureHandler?: Function\n}\n\nexport default  function Sheet(props: SheetProps) {\n    const [isShow, setIsShow] = useState(false);\n\n    const modalHandler = () => {\n        setIsShow(false);\n    }\n\n    const closeSheet = () => {\n        setIsShow(false);\n    }\n\n    const clickHandler = (e: MouseEvent<HTMLElement>): void => {\n        // e.cancelBubble = true; // 阻止冒泡\n        e.stopPropagation(); // 阻止冒泡\n        if (typeof props.ensureHandler === 'function') {\n            props.ensureHandler();\n        }\n        closeSheet();\n    }\n\n    \n    return <>\n        <div onClick={() => setIsShow(true)}>{props.button}</div>\n        <Transition name=\"zui-sheet\" isShow={isShow}>\n            <div className='zui-sheet-box'>\n                <div className=\"zui-sheet-mask\" onClick={modalHandler}></div>\n                {/* sheet主体 */}\n                <div className=\"zui-sheet-area\">\n                    {/* 头部信息 */}\n                    {\n                        props.header ?\n                            props.header :\n                            <div className=\"zui-sheet-header\">\n                                <div onClick={closeSheet}>取消</div>\n                                <div>{props.titleTxt || ''}</div>\n                                <div onClick={clickHandler}>确定</div>\n                            </div>\n                    }\n                    {/* 内容部分 */}\n                    <div\n                        className=\"zui-sheet-body\"\n                    >{props.children}</div>\n                </div>\n            </div>\n        </Transition>\n    </>\n}\n"],"sourceRoot":""}