{"version":3,"sources":["controller/swiper.ts","views/Swiper.tsx","site/pages/swiper/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js"],"names":["SwiperMaster","curIdx","direction","len","justifyDistance","startPoint","distance","endPoint","swiperRange","Prevent_Distance","lockDirection","this","zeroPoint","JSON","stringify","x","y","parse","range","event","absX","Math","abs","absY","nativeEvent","preventDefault","stopPropagation","point","touches","pageX","pageY","changedTouches","dist","Object","assign","_getLockDirection","_getFinalEndPonit","Swiper","children","width","height","className","useState","curSwiperIdx","setCurTabIdx","swiperMaster","setSwiperMaster","swiperPoint","setSwiperPoint","tansitionStyle","setTansitionStyle","refSwiper","useRef","useEffect","instance","length","refItem","current","setSwiperRange","offsetWidth","offsetHeight","swiperClassNames","swiperStyle","getValOrDefault","concat","getClassName","ref","onTouchStart","start","onTouchMove","move","onTouchEnd","end","getIndex","style","transform","transition","SwiperNav","curActiveIdx","SwiperItem","Array","fill","map","val","idx","key","TestContent","background","display","justifyContent","alignItems","_classCallCheck","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","prototype"],"mappings":"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","file":"static/js/0.bc455b45.chunk.js","sourcesContent":["type Point = {\n    x: number,\n    y: number\n}\n\ntype Direction = 'x' | 'y';\n\ninterface SwiperMasterProps {\n    curIdx: number,\n    direction: Direction,\n    len: number,\n    justifyDistance?: number,\n}\n\nclass SwiperMaster {\n\n    startPoint: Point;\n    distance: Point;\n    endPoint: Point;\n    direction: Direction;\n    curIdx: number;\n    swiperRange: number;\n    justifyDistance: number;\n    len: number;\n    Prevent_Distance: number;\n    lockDirection: Direction | null;\n\n    constructor({curIdx = 0, direction = 'x', len, justifyDistance = 33}: SwiperMasterProps) {\n        this.direction = direction;\n        this.curIdx = curIdx;\n        this.justifyDistance = justifyDistance;\n        this.len = len;\n        // 初始值\n        const zeroPoint = JSON.stringify({ x: 0, y: 0 });\n        // \n        this.startPoint = JSON.parse(zeroPoint);\n        this.distance = JSON.parse(zeroPoint);\n        this.endPoint = JSON.parse(zeroPoint);\n        this.swiperRange = 0;\n        this.Prevent_Distance = 7;\n        this.lockDirection = null;\n    }\n\n    // 可能横竖屏 或者 使用者改变 Swiper大小\n    // 所以宽高是动态获取的\n    setSwiperRange(range: number) {\n        this.swiperRange = range;\n    }\n\n    getIndex(): number {\n        return this.curIdx;\n    }\n\n    // 终止时位置调整\n    _getFinalEndPonit(): Point {\n        if (this.direction === this.lockDirection) {\n            const distance = this.distance[this.direction];\n            if (distance > this.justifyDistance) {\n                if (this.curIdx < this.len - 1) {\n                    this.curIdx++;\n                    this.endPoint[this.direction] -= this.swiperRange;\n                }\n            } else if (distance < this.justifyDistance) {\n                if (this.curIdx > 0) {\n                    this.curIdx--;\n                    this.endPoint[this.direction] += this.swiperRange;\n                }\n            }\n        }\n        return this.endPoint;\n    }\n\n    // 方向锁定\n    _getLockDirection(event: React.TouchEvent<HTMLDivElement>): Direction | null {\n        const absX = Math.abs(this.distance.x);\n        const absY = Math.abs(this.distance.y);\n\n        let lockDirection: Direction | null = null;\n\n        if (this.direction === 'x') {\n            if (absX >= absY &&\n                absX > this.Prevent_Distance) {\n                lockDirection = 'x';\n                event.nativeEvent.preventDefault();\n            } else if (absY > this.Prevent_Distance) {\n                lockDirection = 'y';\n            }\n        } else {\n            if (absY >= absX &&\n                absY > this.Prevent_Distance) {\n                lockDirection = 'y';\n                event.nativeEvent.preventDefault();\n            } else if (absX > this.Prevent_Distance) {\n                lockDirection = 'x';\n            }\n        }\n        \n        return lockDirection;\n    }\n\n    start(event: React.TouchEvent<HTMLDivElement>): void {\n        event.stopPropagation();\n        const point = event.touches[0];\n        this.lockDirection = null;\n        this.startPoint = {\n            x: point.pageX,\n            y: point.pageY\n        }\n    }\n\n    move(event: React.TouchEvent<HTMLDivElement>): Point {\n        event.stopPropagation();\n        const point = event.changedTouches[0];\n        this.distance = {\n            x: this.startPoint.x - point.pageX,\n            y: this.startPoint.y - point.pageY,\n        }\n        if (!this.lockDirection) {\n            // 试图锁定滑动方向\n            this.lockDirection = this._getLockDirection(event);\n        } else if (this.direction === this.lockDirection) {\n            // 方向锁定 且 方向正确\n            const dist = this.endPoint[this.direction] - this.distance[this.direction];\n            return Object.assign({}, {x: 0, y: 0}, {[this.direction]: dist})\n        }\n        // 如果return movePoint 那么位置不变\n        return this.endPoint;\n    }\n\n    end(event: React.TouchEvent<HTMLDivElement>): Point {\n        event.stopPropagation();\n        return this._getFinalEndPonit();\n    }\n\n}\n\nexport default SwiperMaster;\n","import React, {useState, useEffect, useRef} from 'react';\n\nimport SwiperMaster from '../controller/swiper';\nimport { getClassName, getValOrDefault } from '../utils/base';\n\ninterface SwiperProps {\n    children: React.ReactNodeArray,\n    width: string,\n    height: string,\n    direction: 'x' | 'y',\n    className: string\n}\n\nexport default function Swiper ({\n        children, width, height,\n        direction = 'x', className\n    }: SwiperProps) {\n    const [curSwiperIdx, setCurTabIdx] = useState(0);\n    const [swiperMaster, setSwiperMaster] = useState();\n    const [swiperPoint, setSwiperPoint] = useState({ x: 0, y: 0});\n    const [tansitionStyle, setTansitionStyle] = useState('');\n\n    const refSwiper = useRef(null);\n\n    useEffect(() => {\n        const instance = new SwiperMaster({\n            curIdx: 0,\n            direction,\n            len: children.length\n        });\n\n        const refItem = refSwiper.current as any;\n        if (direction === 'x') {\n            instance.setSwiperRange(refItem.offsetWidth);\n        } else {\n            instance.setSwiperRange(refItem.offsetHeight);\n        }\n\n        setSwiperMaster(instance);\n    }, [])\n\n    const swiperClassNames = {\n        [className]: !!className,\n        [`zui-swiper-${direction}`]: true\n    }\n\n    const swiperStyle: React.CSSProperties = {\n        width: getValOrDefault(width, ''),\n        height: getValOrDefault(height, '')\n    }\n\n    const touchStartHandler = (event: React.TouchEvent<HTMLDivElement>) => {\n        swiperMaster.start(event);\n        setTansitionStyle('');\n    }\n\n    const touchMoveHandler = (event: React.TouchEvent<HTMLDivElement>) => {\n        const point = swiperMaster.move(event);\n        setSwiperPoint(point);\n    }\n\n    const touchEndHander = (event: React.TouchEvent<HTMLDivElement>) => {\n        const point = swiperMaster.end(event);\n        setCurTabIdx(swiperMaster.getIndex());\n        setSwiperPoint(point);\n        setTansitionStyle('all 0.3s');\n    }\n\n    return <div className={'zui-swiper'.concat(getClassName(swiperClassNames))}\n        ref={refSwiper}\n        onTouchStart={touchStartHandler}\n        onTouchMove={touchMoveHandler}\n        onTouchEnd={touchEndHander}\n        style={swiperStyle}>\n        <div className=\"zui-swiper-body\" style={{\n            transform: `translate(${swiperPoint.x}px, ${swiperPoint.y}px)`,\n            transition: tansitionStyle\n        }}>\n            { children }\n        </div>\n        <SwiperNav\n            len={children.length}\n            curActiveIdx={curSwiperIdx}\n        ></SwiperNav>\n    </div>\n}\n\ninterface SwiperItemProps {\n    children: React.ReactNode\n}\n\nexport function SwiperItem ({children}: SwiperItemProps): JSX.Element {\n    return <div className=\"zui-swiper-item\">{children}</div>\n};\n\ninterface SwiperNavProps {\n    len: number,\n    curActiveIdx: number\n}\n\nfunction SwiperNav({len, curActiveIdx}: SwiperNavProps): JSX.Element {\n\n    return <div className=\"zui-swiper-nav-box\">\n        {\n            Array(len).fill('').map((val, idx) => \n            <span\n                key={idx}\n                className={'zui-swiper-nav'.concat(curActiveIdx === idx ? ' active' : '')}\n            ></span>)\n        }\n    </div>\n}\n","import React from 'react';\n\nimport Swiper, {SwiperItem} from '../../../views/Swiper';\n\nfunction TestContent({val, children}) {\n    return <div style={{\n        height: '100%',\n        // background: `rgb(33, 133, ${val*51})`,\n        background: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }}>{children}{val}</div>\n}\n\nexport default () => {\n    return <div>\n        <Swiper height={'200px'} direction=\"y\">\n            {\n                [1,2,3,4,5].map(val => <SwiperItem key={val}>\n                    <TestContent val={val}>上下滑</TestContent>\n                </SwiperItem>)\n            }\n        </Swiper>\n        <br></br>\n        <Swiper height={'200px'}>\n            {\n                [1,2,3,4,5].map(val => <SwiperItem key={val}>\n                    <TestContent val={val}>左右滑</TestContent>\n                </SwiperItem>)\n            }\n        </Swiper>\n    </div>\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}"],"sourceRoot":""}